#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="PentamerDataBase")]
	public partial class ProteinsDataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertproteinsTable(proteinsTable instance);
    partial void UpdateproteinsTable(proteinsTable instance);
    partial void DeleteproteinsTable(proteinsTable instance);
    #endregion
		
		public ProteinsDataClasses1DataContext() : 
				base(global::PL.Properties.Settings.Default.PentamerDataBaseConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ProteinsDataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ProteinsDataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ProteinsDataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ProteinsDataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<proteinsTable> proteinsTables
		{
			get
			{
				return this.GetTable<proteinsTable>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.proteinsTable2")]
	public partial class proteinsTable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ProteinGI;
		
		private string _ProteinName;
		
		private string _Sequence;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProteinGIChanging(string value);
    partial void OnProteinGIChanged();
    partial void OnProteinNameChanging(string value);
    partial void OnProteinNameChanged();
    partial void OnSequenceChanging(string value);
    partial void OnSequenceChanged();
    #endregion
		
		public proteinsTable()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProteinGI", DbType="NChar(40) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ProteinGI
		{
			get
			{
				return this._ProteinGI;
			}
			set
			{
				if ((this._ProteinGI != value))
				{
					this.OnProteinGIChanging(value);
					this.SendPropertyChanging();
					this._ProteinGI = value;
					this.SendPropertyChanged("ProteinGI");
					this.OnProteinGIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProteinName", DbType= "NChar(40)", UpdateCheck=UpdateCheck.Never)]
		public string ProteinName
		{
			get
			{
				return this._ProteinName;
			}
			set
			{
				if ((this._ProteinName != value))
				{
					this.OnProteinNameChanging(value);
					this.SendPropertyChanging();
					this._ProteinName = value;
					this.SendPropertyChanged("ProteinName");
					this.OnProteinNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sequence", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Sequence
		{
			get
			{
				return this._Sequence;
			}
			set
			{
				if ((this._Sequence != value))
				{
					this.OnSequenceChanging(value);
					this.SendPropertyChanging();
					this._Sequence = value;
					this.SendPropertyChanged("Sequence");
					this.OnSequenceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
